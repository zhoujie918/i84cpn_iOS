//
//  CPGetSMSCodeButton.swift
//  i84cpn
//
//  Created by BenjaminRichard on 16/6/16.
//  Copyright © 2016年 5i84. All rights reserved.
//

import UIKit

protocol GetSMSCodeButtonDelegate {
    func getSMSCode()
}
class CPGetSMSCodeButton: UIButton {

    override init(frame: CGRect) {
        super.init(frame: frame)
        self.titleLabel?.font = Constants.smallFont
        self.setTitle("再次获取验证码", forState: .Normal)
        self.contentEdgeInsets = UIEdgeInsetsMake(0, 5, 0, 5)
        self.setTitleColor(Constants.yellowWordColor, forState: .Normal)
        self.layer.borderColor = Constants.yellowWordColor.CGColor
        self.layer.borderWidth = 1
        self.addTarget(self, action: #selector(sendButtonClick), forControlEvents: .TouchUpInside)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    func updateTime(timer: NSTimer) {
        // 计时开始时，逐秒减少remainingSeconds的值
        remainingSeconds -= 1
    }
    
    func sendButtonClick(sender: UIButton) {
        // 启动倒计时
        isCounting = true
        if delegate != nil {
            delegate?.getSMSCode()
        }
    }
    
    var delegate: GetSMSCodeButtonDelegate?
    var remainingSeconds: Int = 0 {
        willSet {
            self.setTitle("(\(newValue)秒后重新获取)", forState: .Normal)
            if newValue <= 0 {
                self.setTitle("重新获取验证码", forState: .Normal)
                isCounting = false
            }
        }
    }
    var countdownTimer: NSTimer?
    
    var isCounting = false {
        willSet {
            if newValue {
                countdownTimer = NSTimer.scheduledTimerWithTimeInterval(1, target: self, selector: #selector(updateTime), userInfo: nil, repeats: true)
                remainingSeconds = 60
                self.backgroundColor = UIColor.grayColor()
            } else {
                countdownTimer?.invalidate()
                countdownTimer = nil
                self.backgroundColor = Constants.whiteBGColor
            }
            self.enabled = !newValue
        }
    }
}
