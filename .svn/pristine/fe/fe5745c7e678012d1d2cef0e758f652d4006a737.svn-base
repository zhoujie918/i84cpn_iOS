//
//  CPCitySwitchViewController.swift
//  i84cpn
//
//  Created by BenjaminRichard on 16/5/20.
//  Copyright © 2016年 5i84. All rights reserved.
//

import UIKit

class CPCitySwitchViewController: UIViewController,UITableViewDataSource, UITableViewDelegate, BMKLocationServiceDelegate, BMKGeoCodeSearchDelegate {

    override func viewDidLoad() {
        super.viewDidLoad()
        view.addSubview(citySwitchView)
        title = "城市切换"
    }

    override func viewWillAppear(animated: Bool) {
        super.viewWillAppear(animated)
        citySwitchView.frame = view.frame
        if NSUserDefaults.standardUserDefaults().valueForKey("defaultCityIndex") != nil {
            defualt = NSUserDefaults.standardUserDefaults().valueForKey("defaultCityIndex") as! Int
        }
        
    }
    
    override func viewDidAppear(animated: Bool) {
        super.viewDidAppear(animated)
        citySwitchView.tableView.dataSource = self
        citySwitchView.tableView.delegate = self
        citySwitchView.tableView.registerClass(CPCitySwitchTableViewCell.self, forCellReuseIdentifier: cellId)
        citySwitchView.tableView.reloadData()
        
        
        locationManager.delegate = self
        geocodeSearch.delegate = self
        locationManager.startUserLocationService()
    }
    
    func onGetReverseGeoCodeResult(searcher: BMKGeoCodeSearch!, result: BMKReverseGeoCodeResult!, errorCode error: BMKSearchErrorCode) {
        if result != nil {
            let cityName: String = result.addressDetail.city
            citySwitchView.cityLabel.text = cityName
            if NSUserDefaults.standardUserDefaults().valueForKey("defaultCityIndex") == nil {
                for str in cityNameArray {
                    if cityName.hasPrefix(str) {
                        defualt = cityNameArray.indexOf(str)!
                        NSUserDefaults.standardUserDefaults().setObject(defualt, forKey: "defaultCityIndex")
                        NSUserDefaults.standardUserDefaults().setObject(cityNameArray[defualt], forKey: "defaultCityName")
                        //设置同步
                        NSUserDefaults.standardUserDefaults().synchronize()
                        citySwitchView.tableView.reloadData()
                    }
                }
            }
        } else {
            let alertView = UIAlertView(title: "提示", message: "请查看是否连接网络", delegate: self, cancelButtonTitle: "确定")
            alertView.show()
        }
    }
    
    // delegate
    func didUpdateBMKUserLocation(userLocation: BMKUserLocation!) {
        let currentLongitude=locationManager.userLocation.location.coordinate.longitude  //经度
        let CurrentLatitude=locationManager.userLocation.location.coordinate.latitude    //纬度
        
        //发起反向地理编码检索
        let reverseGeocodeSearchOption = BMKReverseGeoCodeOption()
        //        reverseGeocodeSearchOption.reverseGeoPoint = CLLocationCoordinate2DMake(26.0812552750482, 119.327499252607)
        reverseGeocodeSearchOption.reverseGeoPoint = CLLocationCoordinate2DMake(CurrentLatitude, currentLongitude)
        
        geocodeSearch.reverseGeoCode(reverseGeocodeSearchOption)

        //停止定位
        locationManager.stopUserLocationService()
    }

    
    func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {
        if defualt != indexPath.row {
            let index = NSIndexPath(forRow: defualt, inSection: 0)
            var cell = tableView.cellForRowAtIndexPath(index) as! CPCitySwitchTableViewCell
            cell.defaultButton.setImage(nil, forState: .Normal)
            defualt = indexPath.row
            cell = tableView.cellForRowAtIndexPath(indexPath) as! CPCitySwitchTableViewCell
            cell.defaultButton.setImage(UIImage(named: "icon_sel"), forState: .Normal)
            
            let cityId = ((cityDic as NSDictionary).objectForKey(cityNameArray[indexPath.row])) as! Int
            //设置存储信息
            NSUserDefaults.standardUserDefaults().setObject(defualt, forKey: "defaultCityIndex")
            NSUserDefaults.standardUserDefaults().setObject(cityNameArray[indexPath.row], forKey: "defaultCityName")
            NSUserDefaults.standardUserDefaults().setObject(cityId, forKey: "cityId")
            //设置同步
            NSUserDefaults.standardUserDefaults().synchronize()
            switchCity(cityId)
            Constants.dPrint(cityId)
        }
    }
    func switchCity(cityId: Int) {
        let hud = MBProgressHUD.showHUDAddedTo(navigationController?.view, animated: true)
        hud.mode = MBProgressHUDMode.Text
        CPAFHTTPSessionManager.postWithUrlString(Constants.userInfoURL, parameter: Constants.switchCityWithCityId(cityId), progressBlock: { (progress) in
            
            }, successBlock: { (respondData) in
                let dic:NSDictionary = respondData as! NSDictionary
                let rsp: Bool = dic["success"] as! Bool
                if rsp {
                    let objData: NSDictionary = dic["result"] as! NSDictionary
                    if objData.objectForKey("success")  as! Bool {
                        self.navigationController?.popViewControllerAnimated(true)
                        hud.labelText = "切换城市成功"
                        hud.hide(true, afterDelay: 1)
                    } else {
                        hud.labelText = objData.objectForKey("msg") as? String
                        hud.hide(true, afterDelay: 1)
                    }
                } else {
                    hud.hide(false)
                }
            }, failureBlock: { (error) in
                hud.hide(false)
                print(error)
        })
    }
    
    // datasource
    func numberOfSectionsInTableView(tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return cityNameArray.count
    }
    
    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
        let cell:CPCitySwitchTableViewCell = tableView.dequeueReusableCellWithIdentifier(cellId) as! CPCitySwitchTableViewCell
        if indexPath.row == defualt {
            cell.defaultButton.setImage(UIImage(named: "icon_sel"), forState: .Normal)
        } else {
            cell.defaultButton.setImage(UIImage(named: "icon_unsel"), forState: .Normal)
        }
        cell.titleLabel.text = cityNameArray[indexPath.row]
        return cell
    }
    
    private let citySwitchView = CPCitySwitchView()
    private let cellId = "citySwitchCell"
    var cityNameArray = ["福州", "抚顺", "广州", "上海", "沈阳"]
    let cityDic = ["福州":350100, "抚顺": 210400, "广州": 440100, "上海": 310000, "沈阳": 210100]
    var defualt = 0
    
    private let locationManager: BMKLocationService = {
        let m = BMKLocationService()
        m.desiredAccuracy = kCLLocationAccuracyBest
        m.distanceFilter = 10.0
        return m
    } ()
    
    var geocodeSearch=BMKGeoCodeSearch()        //反地理编码
}
