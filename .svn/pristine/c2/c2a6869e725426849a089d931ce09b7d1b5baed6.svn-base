//
//  CPPhoneNumCheckView.swift
//  i84cpn
//
//  Created by BenjaminRichard on 16/5/18.
//  Copyright © 2016年 5i84. All rights reserved.
//

import UIKit
import SnapKit

class CPPhoneNumCheckView: UIView {

    override init(frame: CGRect) {
        super.init(frame: frame)
        self.backgroundColor = Constants.paleBGColor
        
        containView.addSubview(phoneNumLabel)
        containView.addSubview(verifyButton)
        containView.addSubview(line)
        containView.addSubview(verifyTextField)
        self.addSubview(containView)
        self.addSubview(tipLabel)
        self.addSubview(nextStepButton)
    
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func layoutSubviews() {
        containView.snp_makeConstraints { (make) in
            make.top.equalTo(85)
            make.left.right.equalTo(0)
            make.bottom.equalTo(verifyTextField.snp_bottom).offset(20)
        }
        
        phoneNumLabel.snp_makeConstraints { (make) in
            make.left.equalTo(30)
            make.top.equalTo(containView.snp_top).offset(20)
            make.right.equalTo(verifyButton.snp_left).offset(-20)
            make.height.equalTo(verifyTextField)
        }
        
        verifyButton.snp_makeConstraints { (make) in
            make.centerY.equalTo(phoneNumLabel)
            make.right.equalTo(-20)
        }
        
        line.snp_makeConstraints { (make) in
            make.left.equalTo(phoneNumLabel.snp_left)
            make.right.equalTo(verifyButton.snp_right)
            make.top.equalTo(phoneNumLabel.snp_bottom).offset(20)
            make.height.equalTo(1)
        }
        
        verifyTextField.snp_makeConstraints { (make) in
            make.left.equalTo(phoneNumLabel.snp_left)
            make.right.equalTo(verifyButton.snp_right)
            make.top.equalTo(line).offset(20)
        }
        
        tipLabel.snp_makeConstraints { (make) in
            make.left.right.equalTo(0)
            make.top.equalTo(containView.snp_bottom).offset(20)
        }
        
        nextStepButton.snp_makeConstraints { (make) in
            make.left.equalTo(40)
            make.right.equalTo(-40)
            make.top.equalTo(tipLabel.snp_bottom).offset(20)
        }
    }
    
    let containView = Constants.containView()
    
    let phoneNumLabel: UILabel = {
        let view = UILabel()
        if CPUserModel.encryptedPhoneNum != nil {
            view.text = CPUserModel.encryptedPhoneNum
        }
        return view
    } ()
    
    let verifyButton: UIButton = {
        let btn: UIButton = UIButton()
        btn.setTitle("获取验证码", forState: .Normal)
        btn.contentEdgeInsets = UIEdgeInsetsMake(5, 5, 5, 5)
        btn.setTitleColor(Constants.yellowWordColor, forState: .Normal)
        btn.layer.borderColor = Constants.yellowWordColor.CGColor
        btn.layer.borderWidth = 1
        return btn
    } ()
    
    let line = Constants.splitLine()
    
    let verifyTextField: UITextField = {
        let view = UITextField()
        view.placeholder = "请输入手机短信中的验证码"
        return view
    } ()
    
    let tipLabel: UILabel = {
        let view = UILabel()
        view.textColor = Constants.redWordColor
        view.textAlignment = NSTextAlignment.Center
        view.font = Constants.smallFont
        view.text = "验证码错误!"
        view.hidden = true
        return view
    } ()
    
    let nextStepButton: UIButton = {
        let btn: UIButton = UIButton()
        btn.setTitle("下一步", forState: .Normal)
        btn.setTitleColor(Constants.whiteWordColor, forState: .Normal)
        btn.setBackgroundImage(UIImage(named: "btn_login_nor"), forState: .Normal)
        btn.setBackgroundImage(UIImage(named: "btn_login_pre"), forState: .Highlighted)
        btn.layer.cornerRadius = 16
        return btn
    } ()
    
}
