//
//  CPLineInfoController.swift
//  i84cpn
//
//  Created by 周杰 on 16/5/17.
//  Copyright © 2016年 5i84. All rights reserved.
//  线路详情

import UIKit

class CPLineInfoController: UIViewController {    
    var lineInfoView=CPLineInfoView()
    var lineInfoModel=CPLineInfoModel()
    var lineInfoModel2=CPLineInfoModel()
    
    var authURL="\(URL_FIXED)/auth/api"
    let lineDetailAction=["action":"line_detail"]
    let passgerAction=["action":"get_psg_list"]
    let passgerAddress=["action":"get_bu_add_list"]
//    var paras:[String:AnyObject]=["issueId":"10","classesId":"48","lineId":"51","houseLon":"119.327499252607","houseLat":"26.0812552750482","grade":"一年级,二年级,三年级,四年级,五年级,六年级","type":"2","departType":"0"]
    
//    var issueId:Int!
//    var classesId:Int!
//    var lineId:Int!
//    var houseLon:Double!
//    var houseLat:Double!
//    var selectedRow:Int!
    var rang:Int!
    var lineInfoDicW=NSMutableDictionary()
    var lineInfoDicF=NSMutableDictionary()
    
    //订单参数
    var orderDic=NSMutableDictionary()
    var paramDic=NSMutableDictionary()
    var lineArrayS=NSMutableArray()     //lineList列表
    var lineDicF=NSMutableDictionary()
    var lineDicW=NSMutableDictionary()
    var psgIdsArray=NSMutableArray()    //psgIds列表
    var psgIdsDic=NSMutableDictionary()
    var psgResultList=NSArray()
    
    var isRemadeCard:Int!   //是否办新卡
    var psgId:Int!          //乘客ID
    
    var lineIdW:Int!         //线路ID
    var classIdW:AnyObject!  //班次ID
    var getOnStationW:AnyObject!   //上车站点ID
    var getOffStationW:AnyObject!  //下车站点ID
    
    var lineIdF:Int!
    var classIdF:AnyObject!
    var getOnStationF:AnyObject!    //选中的上车站点Id W
    var getOffStationF:AnyObject!         //选中的下车站点Id F
    
//    var uasId:Int!          //通讯地址ID
    var receipt:String!     //发票抬头
    var isNeedContract:Int! //是否需要合同，1需要，0不需要
    var startDate:AnyObject!   //开始乘车时间
    var issueId:Int!         //期次
    var psgIds:Int!         //乘客列表
    var orderId:Int!        //获取到的订单Id
    
    var stationListAr=NSArray()
    var lineInfoObj=NSDictionary()
    
    var stationListArBack=NSArray()
    var lineInfoObjBack=NSDictionary()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        weak var weakSelf=self

        let bundle=NSBundle.mainBundle().loadNibNamed("calendarView", owner: nil, options: nil)[0] as! UIView
        lineInfoView=bundle as! CPLineInfoView
        self.view.addSubview(bundle)
        bundle.snp_makeConstraints { (make) in
            make.edges.equalTo(self.view).offset(UIEdgeInsetsZero)
        }
        self.title="线路详情"
        self.view.backgroundColor=COLOR_BACKGROUND_GRAY
        self.navigationController?.navigationBar.translucent=false
        
//        print("线路详情页的请求参数，往",lineInfoDicW)
//        print("线路详情页的请求参数，返",lineInfoDicF)

        if (rang==1){
            lineInfoModel.lineInfoDataLoad(authURL, para: lineInfoDicW) { (dateListAr, stationListAr, passengerListAr, lineInfoObj) in
//                print(lineInfoObj)
                let stationAr=NSMutableString()
                let stationOptions=NSMutableArray()
                let dateArray=NSMutableArray()
                let lineInfoGradeNum=(lineInfoObj.objectForKey("grade") as! String)
                
                self.lineInfoView.lineNameLb.text=(lineInfoObj.objectForKey("lineName") as! String)
                self.lineInfoView.priceLb.text=String(lineInfoObj.objectForKey("price")!)
                self.lineInfoView.gradeLb.text="推荐"+self.getGradeString(lineInfoGradeNum)+"乘坐"
                for i in 0..<stationListAr.count{
                    
                    var stationValue=(stationListAr as! NSArray)[i].objectForKey("stationName") as! String
                    stationAr.appendString(stationValue+"、")
                    stationOptions.addObject(stationValue)
                }
                

                stationAr.deleteCharactersInRange(NSMakeRange(stationAr.length-1, 1))
                self.lineInfoView.stationValue.text=stationAr as String
//                self.lineInfoView.startStationDropMenu.defaultValue=stationOptions[0] as! String
                self.lineInfoView.startStationDropMenu.defaultValue=""
                self.lineInfoView.startStationDropMenu.options=stationOptions
//                print(self.lineInfoView.dropRowW)
                weakSelf!.lineInfoView.stationListAr=stationListAr
                
                self.lineInfoView.timeValue.text=(stationListAr[0].objectForKey("departTime") as! String)
                self.lineInfoView.orderTermValue.text=(lineInfoObj.objectForKey("issueName") as! String)
                self.stationListAr=stationListAr
                self.lineInfoObj=lineInfoObj
//            self.lineInfoView.timeValue.text=(stationListAr[self.lineInfoView.dropRowW].objectForKey("departTime") as! String)
//                self.lineInfoView.orderTermValue.text=(lineInfoObj.objectForKey("issueName") as! String)
//                self.getOnStationW=(stationListAr[self.lineInfoView.dropRowW].objectForKey("stationId")!)
//                print("dropRowW=",self.lineInfoView.dropRowW)
//                self.getOffStationW=stationListAr[stationListAr.count-1].objectForKey("stationId")
                let openWayNum=(lineInfoObj.objectForKey("openWay")! as! NSString).intValue
                var openWayValue:String!
                if openWayNum==0 {
                    openWayValue="工作日"
                }else{
                    openWayValue="自定义"
                }
                self.lineInfoView.moveWayValue.text=openWayValue
                
                for j in 0..<dateListAr.count {
                    var date=dateListAr[j].objectForKey("operDate")
                    dateArray.addObject(date!)
                    
                    var formatter=NSDateFormatter()
                    formatter.dateFormat="yyyy-MM-dd"
                    var newDate=formatter.dateFromString(date as! NSString as String)!
//                    print(newDate)
                    self.lineInfoView.newDateArray.addObject(newDate)
//                    print(self.lineInfoView.newDateArray)
//                    self.lineInfoView.calendarView.availableDates?.addObject(newDate)

                }
//                print(self.lineInfoView.newDateArray)
           NSNotificationCenter.defaultCenter().postNotificationName("date", object: self.lineInfoView.newDateArray)

                self.lineInfoView.lineBackView.removeFromSuperview()
                self.lineInfoView.orderView.snp_updateConstraints(closure: { (make) in
                    make.top.equalTo(self.lineInfoView.lineView.snp_bottom).offset(HEIGHT_DYNAMIC(10))
                })
                self.lineInfoView.wLabel.removeFromSuperview()
                self.lineInfoView.lineNameLb.snp_updateConstraints(closure: { (make) in
                    make.left.equalTo(self.lineInfoView.lineView).offset(WIDTH_DYNAMIC(15))
                })
            }
        }else{
            //往线路
            lineInfoModel.lineInfoDataLoad(authURL, para: lineInfoDicW) { (dateListAr, stationListAr, passengerListAr, lineInfoObj) in
                //                print(dateListAr, stationListAr, passengerListAr, lineInfoObj)
//                print("self.lineInfoDicW:",self.lineInfoDicW)
                let stationAr=NSMutableString()
                let stationOptions=NSMutableArray()
                let dateArray=NSMutableArray()
                let lineInfoGradeNum=(lineInfoObj.objectForKey("grade") as! String)
                self.stationListAr=stationListAr
                self.lineInfoObj=lineInfoObj
                self.lineInfoView.lineNameLb.text=(lineInfoObj.objectForKey("lineName") as! String)
                self.lineInfoView.priceLb.text=String(lineInfoObj.objectForKey("price")!)
                self.lineInfoView.gradeLb.text="推荐"+self.getGradeString(lineInfoGradeNum)+"乘坐"
                for i in 0..<stationListAr.count{
                    
                    var stationValue=(stationListAr as! NSArray)[i].objectForKey("stationName") as! String
                    stationAr.appendString(stationValue+"、")
                    stationOptions.addObject(stationValue)
                }
                
                stationAr.deleteCharactersInRange(NSMakeRange(stationAr.length-1, 1))
                weakSelf!.lineInfoView.stationListAr=stationListAr
                self.lineInfoView.stationValue.text=stationAr as String
//                self.lineInfoView.startStationDropMenu.defaultValue=stationOptions[0] as! String
                self.lineInfoView.startStationDropMenu.defaultValue=""
                self.lineInfoView.startStationDropMenu.options=stationOptions
                //                print(self.lineInfoView.dropRow)
                self.lineInfoView.timeValue.text=(stationListAr[0].objectForKey("departTime") as! String)
                self.lineInfoView.orderTermValue.text=(lineInfoObj.objectForKey("issueName") as! String)
                //上下车站点
                
//                print("stationIdW:",self.getOnStationW)
                let openWayNum=(lineInfoObj.objectForKey("openWay")! as! NSString).intValue
                var openWayValue:String!
                if openWayNum==0 {
                    openWayValue="工作日"
                }else{
                    openWayValue="自定义"
                }
                self.lineInfoView.moveWayValue.text=openWayValue
                
                for j in 0..<dateListAr.count {
                    let date=dateListAr[j].objectForKey("operDate")
                    dateArray.addObject(date!)
                    
                    let formatter=NSDateFormatter()
                    formatter.dateFormat="yyyy-MM-dd"
                    let newDate=formatter.dateFromString(date as! NSString as String)!
                    self.lineInfoView.newDateArray.addObject(newDate)
                    
                }
                NSNotificationCenter.defaultCenter().postNotificationName("date", object: self.lineInfoView.newDateArray)
            }
            
            //返线路
            lineInfoModel2.lineInfoDataLoad(authURL, para: lineInfoDicF) { (dateListAr, stationListAr, passengerListAr, lineInfoObj) in
//                print("self.lineInfoDicF:",self.lineInfoDicF)
                //                print(dateListAr, stationListAr, passengerListAr, lineInfoObj)
                let stationAr=NSMutableString()
                let stationOptions=NSMutableArray()
                let dateArray=NSMutableArray()
                let lineInfoGradeNum=(lineInfoObj.objectForKey("grade") as! String)
                self.stationListArBack=stationListAr
                self.lineInfoObjBack=lineInfoObj
                self.lineInfoView.lineBackNameKey.text=(lineInfoObj.objectForKey("lineName") as! String)
                self.lineInfoView.priceBackValue.text=String(lineInfoObj.objectForKey("price")!)
                self.lineInfoView.gradeBackValue.text="推荐"+self.getGradeString(lineInfoGradeNum)+"乘坐"
                for i in 0..<stationListAr.count{
                    
                    var stationValue=(stationListAr as! NSArray)[i].objectForKey("stationName") as! String
                    stationAr.appendString(stationValue+"、")
                    stationOptions.addObject(stationValue)
                }

                stationAr.deleteCharactersInRange(NSMakeRange(stationAr.length-1, 1))
                weakSelf!.lineInfoView.stationListArBack=stationListAr
                self.lineInfoView.stationBackValue.text=stationAr as String
//                self.lineInfoView.startStationBackDropMenu.defaultValue=stationOptions[0] as! String
                self.lineInfoView.startStationBackDropMenu.defaultValue=""
                self.lineInfoView.startStationBackDropMenu.options=stationOptions
                self.lineInfoView.timeBackValue.text=(self.stationListArBack[0].objectForKey("departTime") as! String)
                //上下车站点
                self.getOnStationF=self.stationListArBack[0].objectForKey("stationId")
                
            }

        }
//        getPsgList()
//        getPsgAddress()
        
        
//        lineInfoView.addPassgerBtn.addTarget(self, action: #selector(CPLineInfoController.addPsgId), forControlEvents: UIControlEvents.TouchUpInside)
        
        lineInfoView.addPassgerAddress.addTarget(self, action: #selector(CPLineInfoController.addPassgerAddress), forControlEvents: UIControlEvents.TouchUpInside)
        
        lineInfoView.submit.addTarget(self, action: #selector(CPLineInfoController.commitOrder), forControlEvents: UIControlEvents.TouchUpInside)

    }

    
    //添加乘客
    func addPsgId(){
        let vc = CPAddPassengerViewController()
        self.navigationController?.pushViewController(vc, animated: true)
    }
    //添加通讯地址
    func addPassgerAddress(){
        let vc = CPAddAddressViewController()
        self.navigationController?.pushViewController(vc, animated: true)

    }
    
    
    func commitOrder(){
        orderDic.removeAllObjects()
        receipt="个人"
        isRemadeCard=1
        //----------------------------------------------
        self.startDate=self.lineInfoView.startDate
        //乘客数组
        psgIdsArray.removeAllObjects()
        for i in 0..<self.lineInfoView.psgIdsSelectedAr.count{
            psgIdsDic.removeAllObjects()
            let psgBool=self.lineInfoView.psgIdsSelectedAr[i] as! Int
            if(psgBool==1){
                psgIdsDic.setValue(psgResultList[i].objectForKey("psgId"), forKey: "psgId")
                psgIdsDic.setValue(0, forKey: "isRemadeCard")
                let dic = NSDictionary.init(dictionary: psgIdsDic)
                psgIdsArray.addObject(dic)
            }
            
        }
        //获取通讯地址Id
        var uasId=self.lineInfoView.getUasId()

        if (self.lineInfoView.dropRowW == nil){
            let alertView = UIAlertView(title: "提示", message: "请选择上车站点", delegate: self, cancelButtonTitle: "确定")
            alertView.show()
        }else if(rang==0)&&(self.lineInfoView.dropRowF == nil){
            let alertView = UIAlertView(title: "提示", message: "请选择下车站点", delegate: self, cancelButtonTitle: "确定")
            alertView.show()
        }else if startDate==nil {
            let alertView = UIAlertView(title: "提示", message: "请选择乘车日期", delegate: self, cancelButtonTitle: "确定")
            alertView.show()
        }else if psgIdsArray.count==0 {
            let alertView = UIAlertView(title: "提示", message: "乘客列表不能为空", delegate: self, cancelButtonTitle: "确定")
            alertView.show()
        }else if uasId == -1 {
            let alertView = UIAlertView(title: "提示", message: "通讯地址不能为空", delegate: self, cancelButtonTitle: "确定")
            alertView.show()
        }else if self.lineInfoView.dropRowAddress==nil {
            self.lineInfoView.dropRowAddress=0
        }
        
        else{
            isNeedContract=self.lineInfoView.isNeedContract
            if(rang==1){
                self.lineInfoView.timeValue.text=(stationListAr[self.lineInfoView.dropRowW].objectForKey("departTime") as! String)
                self.lineInfoView.orderTermValue.text=(lineInfoObj.objectForKey("issueName") as! String)
                self.getOnStationW=(stationListAr[self.lineInfoView.dropRowW].objectForKey("stationId")!)
                self.getOffStationW=stationListAr[stationListAr.count-1].objectForKey("stationId")
                
                lineDicW.setValue(lineIdW, forKey: "lineId")
                lineDicW.setValue(classIdW, forKey: "classId")
                lineDicW.setValue(getOnStationW, forKey: "getOnStation")
                lineDicW.setValue(getOffStationW, forKey: "getOffStation")
                
                lineArrayS.addObject(lineDicW)
                
            }else{
                if self.lineInfoView.dropRowW==nil{
                    let alertView = UIAlertView(title: "提示", message: "请选择上车站点", delegate: self, cancelButtonTitle: "确定")
                    alertView.show()
                }
                if self.lineInfoView.dropRowF==nil {
                    let alertView = UIAlertView(title: "提示", message: "请选择下车站点", delegate: self, cancelButtonTitle: "确定")
                    alertView.show()
                }
                self.lineInfoView.timeValue.text=(stationListAr[self.lineInfoView.dropRowW].objectForKey("departTime") as! String)
                self.lineInfoView.orderTermValue.text=(lineInfoObj.objectForKey("issueName") as! String)
                self.getOnStationW=(stationListAr[self.lineInfoView.dropRowW].objectForKey("stationId")!)
                //                print("dropRowW=",self.lineInfoView.dropRowW)
                self.getOffStationW=stationListAr[stationListAr.count-1].objectForKey("stationId")
                
                
                lineDicW.setValue(lineIdW, forKey: "lineId")
                lineDicW.setValue(classIdW, forKey: "classId")
                lineDicW.setValue(getOnStationW, forKey: "getOnStation")
                lineDicW.setValue(getOffStationW, forKey: "getOffStation")
                
                self.lineInfoView.timeBackValue.text=(stationListArBack[self.lineInfoView.dropRowF].objectForKey("departTime") as! String)
                //上下车站点
                self.getOnStationF=stationListArBack[0].objectForKey("stationId")
                self.getOffStationF=stationListArBack[self.lineInfoView.dropRowF].objectForKey("stationId")
                
                lineDicF.setValue(lineIdF, forKey: "lineId")
                lineDicF.setValue(classIdF, forKey: "classId")
                lineDicF.setValue(getOnStationF, forKey: "getOnStation")
                lineDicF.setValue(getOffStationF, forKey: "getOffStation")
                lineArrayS.addObject(lineDicW)
                lineArrayS.addObject(lineDicF)
            }
            
//            psgIdsDic.setValue(isRemadeCard, forKey: "isRemadeCard")
//            psgIdsDic.setValue(psgId, forKey: "psgId")
//            psgIdsArray.addObject(psgIdsDic)
            
            paramDic.setValue(lineArrayS, forKey: "lineList")
            paramDic.setValue(psgIdsArray, forKey: "psgIds")
            
            paramDic.setValue(issueId, forKey: "issueId")
            paramDic.setValue(startDate, forKey: "startDate")
            paramDic.setValue(isNeedContract, forKey: "isNeedContract")
            paramDic.setValue(receipt, forKey: "receipt")
            paramDic.setValue(uasId, forKey: "uasId")

            orderDic.setValue("order_add", forKey: "action")
            
            
            do {
                let json=try NSJSONSerialization.dataWithJSONObject(paramDic, options: NSJSONWritingOptions.PrettyPrinted)
                let str=NSString(data: json, encoding: NSUTF8StringEncoding)
                var filtered = str!.stringByReplacingOccurrencesOfString("\n", withString: "", options: NSStringCompareOptions.LiteralSearch, range: NSMakeRange(0, str!.length))
                orderDic.setValue(str, forKey: "param")
                
            } catch {
            }
                        
            lineInfoModel.getOrderId(authURL, para: orderDic) { (orderId) in
                
                self.orderId=orderId
                print(self.orderDic)
                //            print("新增的订单编号是:",self.orderId)
                let vc=CPUnPaidDetailViewController()
                vc.orderId=orderId
                self.navigationController?.pushViewController(vc, animated: true)
                
            }
        }
    }


    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    override func viewWillAppear(animated: Bool) {
        self.lineInfoView.psgRefresh()
        self.getPsgList()
        self.getPsgAddress()
    }
    
    //获取乘客列表
    func getPsgList(){
        lineInfoModel.getPassger(authURL, para: passgerAction) { (resultList) in
            weak var weakSelf=self
            weakSelf!.lineInfoView.resultList=resultList
            self.psgResultList=resultList
        }
        lineInfoView.addPassgerBtn.addTarget(self, action: #selector(CPLineInfoController.addPsgId), forControlEvents: UIControlEvents.TouchUpInside)
    }

    //获取乘客通讯地址
    func getPsgAddress(){
        lineInfoModel.getPassgerAddress(authURL, para: passgerAddress) { (resultList) in
            weak var weakSelf=self
            weakSelf!.lineInfoView.psgAddressAr=resultList
            weakSelf!.lineInfoView.psgAddressAr2=resultList.count
        }
    }
    //站点转换
    func getGradeString(str: String) -> String {
        var grade:String = ""
        var sign = true
        
        for c in str.characters {
            sign = true
            switch c {
            case "1" :
                grade = grade + "一年级"
            case "2" :
                grade = grade + "二年级"
            case "3" :
                grade = grade + "三年级"
            case "4" :
                grade = grade + "四年级"
            case "5" :
                grade = grade + "五年级"
            case "6" :
                grade = grade + "六年级"
            case "7" :
                grade = grade + "初一"
            case "8" :
                grade = grade + "初二"
            case "9" :
                grade = grade + "初三"
            case "a" :
                grade = grade + "高一"
            case "b" :
                grade = grade + "高二"
            case "c" :
                grade = grade + "高三"
            default:
                sign = false
                break
            }
            
            if sign {
                grade = grade + "、"
            }
        }
        
        
        let index2 = grade.endIndex.advancedBy(-1)
        grade=grade.substringToIndex(index2)
        
        return grade
    }





    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }


}


