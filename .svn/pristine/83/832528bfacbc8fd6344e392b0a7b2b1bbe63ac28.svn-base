//
//  CPUnPaidDetailViewController.swift
//  i84cpn
//
//  Created by BenjaminRichard on 16/5/26.
//  Copyright © 2016年 5i84. All rights reserved.
//

import UIKit

class CPUnPaidDetailViewController: UIViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        title = "待付款"
        
        view.addSubview(unPaidOneLineDetailView)
        view.addSubview(unPaidTwoLineDetailView)
        
        //注册通知,接收支付宝APP支付回调
//        NSNotificationCenter.defaultCenter().addObserver(self, selector:#selector(CPUnPaidDetailViewController.alipaySuccess) , name: "ALIPAY_SUCCESS", object: nil)
//        NSNotificationCenter.defaultCenter().addObserver(self, selector:#selector(CPUnPaidDetailViewController.alipayFail) , name: "ALIPAY_FAIL", object: nil)
    }
    
    
    override func viewWillAppear(animated: Bool) {
        super.viewWillAppear(animated)
        getData()
        unPaidOneLineDetailView.frame = view.frame
        unPaidTwoLineDetailView.frame = view.frame
    }
    
    override func viewDidAppear(animated: Bool) {
        super.viewDidAppear(animated)
        unPaidOneLineDetailView.payButton.addTarget(self, action: #selector(pay), forControlEvents: .TouchUpInside)
        unPaidTwoLineDetailView.payButton.addTarget(self, action: #selector(pay), forControlEvents: .TouchUpInside)
        
        unPaidOneLineDetailView.stateButton.addTarget(self, action: #selector(lookDetail1), forControlEvents: .TouchUpInside)
        unPaidTwoLineDetailView.stateButton1.addTarget(self, action: #selector(lookDetail1), forControlEvents: .TouchUpInside)
        unPaidTwoLineDetailView.stateButton2.addTarget(self, action: #selector(lookDetail2), forControlEvents: .TouchUpInside)
    }
    
    override func viewDidDisappear(animated: Bool) {
        //移除通知
//        NSNotificationCenter.defaultCenter().removeObserver(self, name: "ALIPAY_SUCCESS", object: nil)
//        NSNotificationCenter.defaultCenter().removeObserver(self, name: "ALIPAY_FAIL", object: nil)
    }
    
    func lookDetail1(button: UIButton) {
        // 跳转到线路详情
        let vc = CPLineInfoController()
        vc.lineIdW = self.lineId1
        vc.classIdW = self.classId1
        vc.issueId = self.issueId1
        self.navigationController?.pushViewController(vc, animated: true)
    }
    func lookDetail2(button: UIButton) {
        let vc = CPLineInfoController()
        vc.lineIdW = self.lineId2
        vc.classIdW = self.classId2
        vc.issueId = self.issueId2
        self.navigationController?.pushViewController(vc, animated: true)
    }

    //支付
    func pay(button: UIButton) {
       
        //支付参数 （lineId,classId为后续选座接口备用,必传）
        let orderType = (lineDetailData?.objectForKey("isOrderGroup") as! Int) == 0 ? "1" : "2"
        let param:NSDictionary = ["action":"pay_alipay","orderNo":lineDetailData!.objectForKey("orderNo")!,"sysType":"IOS","orderType":orderType,"lineId":lineId1,"classId":classId1]
        //创建支付宝支付Model单例
        let alipayModel = CPAlipayModel.shareCPAlipayModel()
        alipayModel.setValuesForKeysWithDictionary(param as! [String : AnyObject])
        print(param)
        //调起支付模块
        
        [alipayModel.alipaySuccessBlock({ (responseObject) in
            self.alipaySuccess()
            
            }, failureBlock: { (error) in
                print(error)
                self.alipayFail()
        })];
//        //本页面通知失效，跳转至付款失败页面进行测试
//        let payFailVC = CPPayFailResultController()
//        self.navigationController?.pushViewController(payFailVC, animated: true)
    }
    
    //支付成功
    func alipaySuccess() {
        print("支付成功")
        let payVC = CPPayResultController()
        self.navigationController?.pushViewController(payVC, animated: true)
    }
    
    //支付失败
    func alipayFail() {
        print("支付失败")
        let payFailVC = CPPayFailResultController()
        self.navigationController?.pushViewController(payFailVC, animated: true)
    }
    
    
    
    
    
    func getData() {
        CPAFHTTPSessionManager.postWithUrlString(Constants.userInfoURL, parameter: Constants.getOrderDetail(orderId), progressBlock: { (progress) in
            
            }, successBlock: { (respondData) in
                let dic:NSDictionary = respondData as! NSDictionary
                let rsp: Bool = dic["success"] as! Bool
                if rsp {
                    var objData: NSDictionary = dic["result"] as! NSDictionary
                    objData = objData.objectForKey("result") as! NSDictionary
                    let s: NSArray = objData.objectForKey("lineList") as! NSArray
                    if s.count == 1 {
                        self.unPaidOneLineDetailView.hidden = false
                        self.unPaidTwoLineDetailView.hidden = true
                        self.lineDetailData = objData
                        let ar: NSArray = objData.objectForKey("lineList") as! NSArray
                        self.classId1 = ar[0].objectForKey("classId") as! Int
                        self.lineId1 = ar[0].objectForKey("lineId") as! Int
                        self.issueId1 = ar[0].objectForKey("issueId") as! Int
                        self.unPaidOneLineDetailView.reloadData(objData)
                    } else {
                        self.unPaidTwoLineDetailView.reloadData(objData)
                        self.lineDetailData = objData
                        let ar: NSArray = objData.objectForKey("lineList") as! NSArray
                        self.classId1 = ar[0].objectForKey("classId") as! Int
                        self.lineId1 = ar[0].objectForKey("lineId") as! Int
                        self.issueId1 = ar[0].objectForKey("issueId") as! Int
                        
                        self.classId2 = ar[1].objectForKey("classId") as! Int
                        self.lineId2 = ar[1].objectForKey("lineId") as! Int
                        self.issueId2 = ar[1].objectForKey("issueId") as! Int
                        self.unPaidOneLineDetailView.hidden = true
                        self.unPaidTwoLineDetailView.hidden = false
                    }
                }
            }, failureBlock: { (error) in
                print(error)
        })
    }
    
    var orderId:Int = 0
    
    private var issueId1: Int = 0
    private var lineId1: Int = 0
    private var classId1:Int = 0
    private var issueId2: Int = 0
    private var lineId2: Int = 0
    private var classId2: Int = 0
    
    private var lineDetailData:NSDictionary?
    private let unPaidOneLineDetailView = CPUnPaidOneLineDetailView()
    private let unPaidTwoLineDetailView = CPUnPaidTwoLineDetailView()
}
